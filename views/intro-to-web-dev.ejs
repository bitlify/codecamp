<% layout('layouts/boilerplate') %>

<h1 class="title">Intro To Web Development</h1>
<p class="lead">Web Development is the process of building <strong class="strong">websites</strong> and <strong class="strong">applications</strong> for the internet.</p>
<h2 id="the-internet" class="subtitle">The Internet</h2>
<p class="text">
    Essentially, the internet is an <strong class="strong">abundance</strong> of connected devices. Those devices can be all sorts of things like laptops, mobile devices, desktops, smart watches and so on. So how are they connected? How do they <strong class="strong">communicate</strong> with each other? Lets start with a very simple example. Lets say I have two computers which I want to connect, so I connect them with a physical cable which now allows me to send data from one computer to the other. However, what if I now want to connect about 10 computers, this would mean I would need 9 cables in order to connect <strong class="strong">each</strong> computer to every single other computer. This would obviously be very <strong class="strong">expensive</strong> and <strong class="strong">inefficient</strong>, and that is only with 10 computers, imagine if I had hundreds or even thousands, it simply would not work. Thankfully, the Internet uses something called <strong class="strong">routing</strong>, this involves using other physical machines that have the job of connecting my information or my data to somebody else. The way that individual machines are identified is through <strong class="strong">IP addresses</strong> which these machines use to make sure my information/data goes to the correct computer. Now this was a very simple overview of the Internet and all you need to take away from this is that the Internet is a bunch of connected computers that enable us to share websites and make the web work.
</p>

<h2 id="the-web" class="subtitle">The Web</h2>
<p class="text">
    The Internet is this <strong class="strong">infrastructure</strong> that enables many things including <strong class="strong">The World Wide Web</strong>. The Web is an information system where documents and other resources are available over the Internet. These documents and resources are identified by <strong class="strong">URL's</strong> ( Uniform Resource Locators ). These documents are transferred via <strong class="strong">HTTP</strong> ( Hyper Text Transfer Protocol ), this is the foundation of how the Web works and how we request and share resources. The <strong class="strong">protocol</strong> HTTP is a set of rules for how a form of <strong class="strong">communication</strong> should work. There are many other protocols involved in the Internet like TCP/IP but HTTP is by far the most important for our purposes.
    <span class="question">How does the protocol work?</span>
    Essentially, when you visit a web page, you are generating a <strong class="strong">request</strong> to that specific URL, for example <code>https://www.google.com/</code>, your request then travels to those specific servers, in this case the google servers, and asks the server for a particular <strong class="strong">resource</strong>. A response is then generated by the server which is sent back to you with the resources that you asked for. Your browser takes that information and <strong class="strong">displays</strong> it for you on your monitor.When I say server, I am referring to <strong class="strong">web servers</strong> in particular. There are many kinds of servers like video game servers but we as web developers are mostly interested in web servers. These are machines connected to the internet, their entire job is to <strong class="strong">satisfy</strong> requests coming in via the web. 
    <span class="question">What is a client?</span>
    A <strong class="strong">client</strong> is the machine/computer/device that sends requests over to a server.
</p>

<h2 id="the-request/response-cycle" class="subtitle">The Request/Response Cycle</h2>
<p class="text">
    <span class="question">So what actually happens when you send a request to a server?</span>
    Once you send a request to a server, the server does not respond with a complete webpage looking like what you think it looks like. In fact the server responds with <strong class="strong">instructions</strong>. This is in the form of code that your browser can understand and display for you to see. So the job of the browser is to display and <strong class="strong">render</strong> information for humans to understand. <span class="question">What are these instructions and what do they look like?</span>
    In fact you can see for yourself, if you are on any webpage you can right click it and press "view page source". That is what the actual response from the server looks like! Your browser then takes those instruction and turns them into a webpage. The code that you actually see all consists of <strong class="strong">HTML</strong>, <strong class="strong">CSS</strong> and <strong class="strong">Javascript</strong>, those are the three <strong class="strong">core</strong> technologies that your browser understands.
</p>

<h2 id="front-end-and-back-end" class="subtitle">Front-End and Back-End</h2>
<p class="text">
    Two terms that you may have probably heard of before or you may already know are <strong class="strong">front-end</strong> and <strong class="strong">back-end</strong>. Lets look at an example again:
    You ask a server for a webpage via an HTTP request. That server then has the task of responding with an <strong class="strong">HTTP response</strong>. Before the server responds it actually runs some code that figures out what to respond with. You can think of this like a restaurant where you have a kitchen and you have the dining room where you sit. The kitchen and the dining room are two separate locations but both are super critical to the restaurant succeeding and actually being a restaurant. In this case the kitchen is the back-end and the dining area is the front-end. Another example could be:
    You want to google for the term "cats", so you send a request to the google servers. Google now has to do some thinking and figure out: <span class="question">What are the search results? How do I rank them? How many are there? How many pages do I need to make? What about the ads?</span> There is a lot of <strong class="strong">logic</strong> that goes on behind the scenes and it all happens on the back-end. Then, it sends back a response to you in the form of HTML, CSS and Javascript, this code runs in your browser and you are able to see the newly constructed web page, the front-end. The back-end could also be written in many different languages including Python, C, Java, Javascript and many more.
</p>